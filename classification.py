# -*- coding: utf-8 -*-
"""classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L4zrg5WhJtQSbymj6yvkYCW3CKr1mYId
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns

# Load dataset
from google.colab import files
files.upload()
df = pd.read_csv("nyc_climate.csv")  # Adjust path if necessary
df['DATE'] = pd.to_datetime(df['DATE'])  # Convert DATE to datetime format
df.set_index('DATE', inplace=True)  # Set DATE as index

# Create weather categories based on TAVG
def categorize_temp(temp):
    if temp < 5:
        return "Cold"
    elif 5 <= temp <= 20:
        return "Mild"
    else:
        return "Hot"

df['WeatherCategory'] = df['TAVG'].apply(categorize_temp)

# Convert categories to numerical labels
category_map = {"Cold": 0, "Mild": 1, "Hot": 2}
df['WeatherLabel'] = df['WeatherCategory'].map(category_map)

# Define features (X) and target (y)
df['Year'] = df.index.year
df['DayOfYear'] = df.index.dayofyear
X = df[['Year', 'DayOfYear', 'TMAX', 'TMIN', 'PRCP']]  # Features
y = df['WeatherLabel']  # Target variable

# Split dataset into training & testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Naive Bayes classifier
nb_model = GaussianNB()
nb_model.fit(X_train, y_train)

# Make predictions
y_pred = nb_model.predict(X_test)

# Evaluate model performance
print("Classification Report:")
print(classification_report(y_test, y_pred))

# Confusion Matrix
plt.figure(figsize=(6, 4))
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt="d", cmap="Blues",
            xticklabels=category_map.keys(), yticklabels=category_map.keys())
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix for Weather Classification")
plt.show()